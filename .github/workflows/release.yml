name: Release Packages
on:
  release:
    types: [created]

jobs:
  # Prepare icons for all platforms
  prepare-icons:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install ImageMagick
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick
          
      - name: Convert icons for all platforms
        run: |
          chmod +x resources/icons/*.sh
          ./resources/icons/convert_all.sh
          
      - name: Upload converted icons
        uses: actions/upload-artifact@v3
        with:
          name: prepared-icons
          path: resources/icons

  # Matrix job to define all target platforms
  matrix-prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          echo "matrix={
            \"include\": [
              {\"os\": \"ubuntu-latest\", \"rust-target\": \"x86_64-unknown-linux-gnu\", \"platform\": \"linux-x86_64\"},
              {\"os\": \"ubuntu-latest\", \"rust-target\": \"aarch64-unknown-linux-gnu\", \"platform\": \"linux-arm64\"},
              {\"os\": \"ubuntu-latest\", \"rust-target\": \"armv7-unknown-linux-gnueabihf\", \"platform\": \"linux-armv7\"},
              {\"os\": \"ubuntu-latest\", \"rust-target\": \"arm-unknown-linux-gnueabihf\", \"platform\": \"linux-arm\"},
              {\"os\": \"ubuntu-latest\", \"rust-target\": \"i686-unknown-linux-gnu\", \"platform\": \"linux-i686\"},
              {\"os\": \"ubuntu-latest\", \"rust-target\": \"riscv64gc-unknown-linux-gnu\", \"platform\": \"linux-riscv64\"},
              {\"os\": \"ubuntu-latest\", \"rust-target\": \"x86_64-unknown-linux-musl\", \"platform\": \"linux-musl-x86_64\"},
              {\"os\": \"macos-latest\", \"rust-target\": \"x86_64-apple-darwin\", \"platform\": \"macos-x86_64\"},
              {\"os\": \"macos-latest\", \"rust-target\": \"aarch64-apple-darwin\", \"platform\": \"macos-arm64\"},
              {\"os\": \"windows-latest\", \"rust-target\": \"x86_64-pc-windows-msvc\", \"platform\": \"windows-x86_64\"},
              {\"os\": \"windows-latest\", \"rust-target\": \"i686-pc-windows-msvc\", \"platform\": \"windows-i686\"}
            ]
          }" >> $GITHUB_OUTPUT

  # Build all platforms in parallel
  build:
    needs: [matrix-prep, prepare-icons]
    strategy:
      matrix: ${{fromJson(needs.matrix-prep.outputs.matrix)}}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      
      # Download prepared icons
      - name: Download prepared icons
        uses: actions/download-artifact@v3
        with:
          name: prepared-icons
          path: resources/icons
      
      # Make sure icon scripts are executable
      - name: Make icon scripts executable
        run: chmod +x resources/icons/*.sh
        shell: bash
      
      # Set up Rust with caching
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.rust-target }}
          override: true
          
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.rust-target }}
          
      # Use platform-specific composite actions
      - name: Build Linux packages
        if: startsWith(matrix.platform, 'linux')
        uses: ./.github/actions/build-linux
        with:
          target: ${{ matrix.rust-target }}
          platform: ${{ matrix.platform }}
          
      - name: Build macOS packages
        if: startsWith(matrix.platform, 'macos')
        uses: ./.github/actions/build-macos
        with:
          target: ${{ matrix.rust-target }}
          platform: ${{ matrix.platform }}
          
      - name: Build Windows packages
        if: startsWith(matrix.platform, 'windows')
        uses: ./.github/actions/build-windows
        with:
          target: ${{ matrix.rust-target }}
          platform: ${{ matrix.platform }}
          
      # Upload artifacts to the GitHub release
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: artifacts/* 